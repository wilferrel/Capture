<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/GPUImagePicture.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/GPUImagePicture</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
            
			
			<NodeRef refid="104"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/initWithURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (id)initWithURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/initWithURL:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/initWithImage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (id)initWithImage:(UIImage *)newImageSource</Declaration>
			
			
			<Anchor>//api/name/initWithImage:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/initWithCGImage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (id)initWithCGImage:(CGImageRef)newImageSource</Declaration>
			
			
			<Anchor>//api/name/initWithCGImage:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/initWithImage:smoothlyScaleOutput:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (id)initWithImage:(UIImage *)newImageSource smoothlyScaleOutput:(BOOL)smoothlyScaleOutput</Declaration>
			
			
			<Anchor>//api/name/initWithImage:smoothlyScaleOutput:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/initWithCGImage:smoothlyScaleOutput:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (id)initWithCGImage:(CGImageRef)newImageSource smoothlyScaleOutput:(BOOL)smoothlyScaleOutput</Declaration>
			
			
			<Anchor>//api/name/initWithCGImage:smoothlyScaleOutput:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/processImage</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (void)processImage</Declaration>
			
			
			<Anchor>//api/name/processImage</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/outputImageSize</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (CGSize)outputImageSize</Declaration>
			
			
			<Anchor>//api/name/outputImageSize</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/processImageWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">Process image with all targets and filters asynchronously
The completion handler is called after processing finished in the
GPU&apos;s dispatch queue - and only if this method did not return NO.</Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (BOOL)processImageWithCompletionHandler:(void ( ^ ) ( void ))completion</Declaration>
			
			<ReturnValue><Abstract type="html">NO if resource is blocked and processing is discarded, YES otherwise</Abstract></ReturnValue>
			<Anchor>//api/name/processImageWithCompletionHandler:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/processImageUpToFilter:withCompletionHandler:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture.h</DeclaredIn>
			
			<Declaration>- (void)processImageUpToFilter:(GPUImageOutput&lt;GPUImageInput&gt; *)finalFilterInChain withCompletionHandler:(void ( ^ ) ( UIImage *processedImage ))block</Declaration>
			
			
			<Anchor>//api/name/processImageUpToFilter:withCompletionHandler:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/replaceTextureWithSubimage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture+TextureSubimage.h</DeclaredIn>
			
			<Declaration>- (void)replaceTextureWithSubimage:(UIImage *)subimage</Declaration>
			
			
			<Anchor>//api/name/replaceTextureWithSubimage:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/replaceTextureWithSubCGImage:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture+TextureSubimage.h</DeclaredIn>
			
			<Declaration>- (void)replaceTextureWithSubCGImage:(CGImageRef)subimageSource</Declaration>
			
			
			<Anchor>//api/name/replaceTextureWithSubCGImage:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/replaceTextureWithSubimage:inRect:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture+TextureSubimage.h</DeclaredIn>
			
			<Declaration>- (void)replaceTextureWithSubimage:(UIImage *)subimage inRect:(CGRect)subRect</Declaration>
			
			
			<Anchor>//api/name/replaceTextureWithSubimage:inRect:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/GPUImagePicture/replaceTextureWithSubCGImage:inRect:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GPUImagePicture+TextureSubimage.h</DeclaredIn>
			
			<Declaration>- (void)replaceTextureWithSubCGImage:(CGImageRef)subimageSource inRect:(CGRect)subRect</Declaration>
			
			
			<Anchor>//api/name/replaceTextureWithSubCGImage:inRect:</Anchor>
            <NodeRef refid="104"/>
		</Token>
		
        
	</File>
</Tokens>